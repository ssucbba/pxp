<?php

require_once(dirname(__FILE__).'/../DatosGenerales.php');
require_once(dirname(__FILE__).'/../tcpdf/config/lang/spa.php');
require_once(dirname(__FILE__).'/../tcpdf/tcpdf.php');
require_once(dirname(__FILE__).'/mypdf.php');
require_once(dirname(__FILE__).'/../tcpdf/tcpdf_barcodes_2d.php');


class ReportePDFFormulario extends MYPDF {
	
	var $fecha_rep = '';
	var $usuario_firma = '';		
	public $firma;
	var $firmar;
	var $nombre_archivo;
	var $titulo;
	var $orientacion;
	var $url_archivo;
	//////////////
	//Constructor
	//////////////
	
	function __construct(CTParametro $objParam) {
		$this->objParam=$objParam;
		$this->datos_reporte = array();	
		$this->firma = array();
		
		$this->firmar = $this->objParam->getParametro('firmar');
		$this->fecha_rep = $this->objParam->getParametro('fecha_firma');
		$this->usuario_firma = $this->objParam->getParametro('usuario_firma');
		$this->nombre_usuario_firma = $this->objParam->getParametro('nombre_usuario_firma');
		
		$this->url_archivo = dirname(__FILE__) . "/../../../reportes_generados/".$this->objParam->getParametro('nombre_archivo');
		$this->nombre_archivo=$this->objParam->getParametro('nombre_archivo');
		$this->titulo=$this->objParam->getParametro('titulo_archivo');
		$this->orientacion=$this->objParam->getParametro('orientacion');
		parent::__construct($this->orientacion, 'mm', $this->objParam->getParametro('tamano'), true, 'UTF-8', false);
		$this->SetTitle($this->titulo);		
		$this->SetCreator('pXP');
		$this->SetAuthor('kplian');		
		$this->SetSubject("File generated by pXP framework");
		$this->SetKeywords("TCPDF, PDF, pXP");
	}
	//Esta funcion debe llamarse antes del addpage para poner la firma en el header o footer
	function firmar() {
		$this->firma['fecha_firma'] = $this->fecha_rep;
		$this->firma['usuario_firma'] = $this->usuario_firma;
		$this->firma['hash'] = md5(json_encode($this->firma));
				
		if ($this->firmar == 'si') {		
			$this->crearFirma("https://erpmobile.obairlines.bo/#open-signed-document:" . $this->firma['hash'] ,dirname(__FILE__).'/../../lib'.$_SESSION['_DIR_LOGO_FIRMA']);
			$this->Image("/tmp/" . $this->firma['hash'] . ".png", $this->GetX(), 5, 35,35);
		} else {
			$x=$this->getX();
			$y=$this->getY();
			$this->Image(dirname(__FILE__).'/../../lib'.$_SESSION['_DIR_LOGO'], $x, $y, 36);
		}
			
		
		
	}
	
	function crearFirma ($data, $logo_url) {
		$barcodeobj = new TCPDF2DBarcode($data, 'QRCODE,H');
		
		$QR = imagecreatefromstring($barcodeobj->getBarcodePngData(3, 3, array(0,0,0)));
		//$QR = imagecreatefrompng('https://chart.googleapis.com/chart?cht=qr&chld=H|1&chs='.$size.'&chl='.urlencode($data));
		
		$logo = imagecreatefromstring(file_get_contents($logo_url));
		
		$QR_width = imagesx($QR);
		$QR_height = imagesy($QR);
			
		$logo_width = imagesx($logo);			
		$logo_height = imagesy($logo);		
		
		//imagecopyresampled($QR, $logo, $QR_width/3, $QR_height/3, 0, 0, $logo_qr_width, $logo_qr_height, $logo_width, $logo_height);
		imagecopy ( $QR , $logo , ($QR_width/2) - ($logo_width/2) , ($QR_height/2) - ($logo_height/2) , 0 , 0 , $logo_width , $logo_height);
		
		imagepng($QR,"/tmp/" . $this->firma['hash'] . ".png");
		imagedestroy($QR);
	}
	
	function crearFirma2 () {
		if ($this->firmar == 'si') {
			$this->firma['fecha_firma'] = $this->fecha_rep;
			$this->firma['usuario_firma'] = $this->usuario_firma;
			$this->firma['hash'] = md5(json_encode($this->firma));
			
			$data = json_encode($this->firma);
			$barcodeobj = new TCPDF2DBarcode($data, 'QRCODE,H');
			
			$QR = imagecreatefromstring($barcodeobj->getBarcodePngData(3, 3, array(0,0,0)));
			//$QR = imagecreatefrompng('https://chart.googleapis.com/chart?cht=qr&chld=H|1&chs='.$size.'&chl='.urlencode($data));
			$url = "/tmp/" . $this->firma['hash'] . ".png";
			imagepng($QR,$url);
			imagedestroy($QR);
		} else {
			$url = "";
		}
		return $url;
	}
	
	/////////
	//Metodos
	/////////
	
	protected function __init(){
		//$this->SetProtection($permissions=array('print','copy','print-high','modify'), $user_pass='', $owner_pass=null, $mode=0, $pubkeys=null);
		$this->SetHeaderData('../..'.$_SESSION['_DIR_LOGO'], PDF_HEADER_LOGO_WIDTH, $this->getValorDef('titulo'));
		
		//Set header and footer fonts
		$this->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
		$this->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

		//Set default monospaced font
		$this->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
		
		//Set margins
		$this->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
		$this->SetHeaderMargin(PDF_MARGIN_HEADER);
		$this->SetFooterMargin(PDF_MARGIN_FOOTER);
		
		//Set auto page breaks
		$this->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);

		//Set image scale factor
		$this->setImageScale(PDF_IMAGE_SCALE_RATIO);
	}

		
	protected function inicializarValoresDef(){
		//Valores generales por defecto
		$this->arrValDefecto=array('url_archivo'=>dirname(__FILE__).'/../../../reportes_generados/',
									'nombre_archivo'=>'reporte_pdf','creator'=>'pXP','author'=>'Kplian',
									'title1'=>'REGISTRO','title2'=>'Reporte generado por PXP',
									'subject'=>'File generated by pXP framework','keywords'=>'TCDF, PDF, pXP',
									'main_ruta_logo'=>dirname(__FILE__).'/..'.$_SESSION['_DIR_LOGO']);
									
		//Incializa los Keys genéricos para todas las plantillas
		$this->arrPlantillaHtmlGenericKeys=array('main_title1','main_title2','main_pagina_actual','main_pagina_total','main_user','main_sistema','main_barcode',
												'main_ruta_logo','main_date','1_','_1');
	}
	
	public function generarReporte(){
		//$this->AddPage();
		parent::output($this->strUrlArchivo,'F');
	}
	
	function Header(){
		if($this->strTipoHeader=='html'){
			//Formato Html
			$this->writeHTML($this->strHeaderHtml,true,false,true,false,'');
		} else{
			//Formato TCPDF
			//$this->renderHeaderTCPDF();
		}
	}
	
	function Footer(){
		$this->SetFontSize(5.5);
		$this->setY(-15);
		$ormargins = $this->getOriginalMargins();
		$this->SetTextColor(0, 0, 0);
		//set style for cell border
		$line_width = 0.85 / $this->getScaleFactor();
		$this->SetLineStyle(array('width' => $line_width, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0)));
		$ancho = round(($this->getPageWidth() - $ormargins['left'] - $ormargins['right']) / 3);
		$this->Ln(2);
		$cur_y = $this->GetY();
		//$this->Cell($ancho, 0, 'Generado por XPHS', 'T', 0, 'L');
		if ($this->usuario_firma == '') {
			$this->Cell($ancho, 0, 'Usuario: '.$_SESSION['_LOGIN'], '', 0, 'L');
		} else {
			$this->Cell($ancho, 0, 'Usuario Firma: '.$this->usuario_firma, '', 0, 'L');
		}
		$pagenumtxt = 'Página'.' '.$this->getAliasNumPage().' de '.$this->getAliasNbPages();
		$this->Cell($ancho, 0, $pagenumtxt, '', 0, 'C');
		$this->Cell($ancho, 0, $_SESSION['_REP_NOMBRE_SISTEMA'], '', 0, 'R');
		$this->Ln();
		if ($this->fecha_rep == '') {			
			$this->Cell($ancho, 0, "Fecha : " . date("d-m-Y H:i:s"), '', 0, 'L');
		} else {
			//$this->Cell($ancho, 0, "Fecha Firma: " . $this->fecha_rep, '', 0, 'L');
		}	
		
	}	
	

}
?>
	